{"version":3,"sources":["components/UI/input/myInput.module.css","components/UI/button/Mybutton.module.css","components/UI/select/mySelect.module.css","pages/About.jsx","API/PostService.js","hooks/usePosts.jsx","utils/pages.js","components/UI/button/Mybutton.jsx","components/UI/input/myInput.jsx","components/PostForm.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","pages/Posts.jsx","hooks/useFetching.js","pages/Error.jsx","components/UI/navbar/MyNavbar.jsx","App.js","index.js"],"names":["module","exports","About","t","useTranslation","Helmet","charSet","Typography","variant","color","PostService","limit","page","axios","get","params","_limit","_page","response","usePosts","posts","sort","query","sortedPosts","useMemo","console","log","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","getPageCount","totalCount","Math","ceil","Mybutton","children","props","Button","myInput","React","forwardRef","ref","TextField","sx","mt","mb","className","classes","label","PostForm","create","useState","body","setPost","onChange","e","target","value","type","placeholder","onClick","preventDefault","newPost","id","Date","now","MySelect","options","defaultValue","FormControl","InputLabel","Select","minWidth","event","map","option","MenuItem","name","PostFilter","setFilter","selectedSort","PostItem","remove","fontSize","PostList","length","textAlign","fontWeight","index","number","Posts","setPosts","totalPages","setTotalPages","setPage","sortedAndSearchedPosts","callback","isLoading","setIsLoading","error","setError","fetching","message","useFetching","getAll","data","headers","fetchPosts","isPostsLoading","postError","pagesArray","result","i","push","getPagesArray","useEffect","p","ButtonGroup","justifyContent","width","n","changePage","Error","MyNavbar","AppBar","position","Toolbar","component","flexGrow","underline","to","App","path","element","i18n","use","initReactI18next","LanguageDetector","HttpApi","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","react","useSuspense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adba38ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"myInput_myInput__3iWhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"Mybutton_myBtn__1axLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySelect\":\"mySelect_mySelect__2sp8b\"};","import { Typography } from '@mui/material';\r\nimport {Helmet} from \"react-helmet\";\r\nimport React from 'react';\r\nimport '../styles/App.css';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction About() {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{ t(\"about\") }</title>\r\n            </Helmet>\r\n            <Typography variant=\"h1\" color=\"initial\">\r\n                { t(\"about_content\") }\r\n            </Typography>\r\n            <Typography variant=\"h1\" color=\"initial\">\r\n                { t(\"about_content\") }\r\n            </Typography>\r\n        </div>\r\n                \r\n    )\r\n}\r\n\r\nexport default About\r\n","import axios from 'axios';\r\n\r\nexport default class PostService {\r\n    static async getAll(limit = 10, page = 1) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n            params: {\r\n                _limit: limit,\r\n                _page: page\r\n            }\r\n        })\r\n        return response;\r\n    }\r\n}","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        console.log('sorted posts success')\r\n        if(sort) {\r\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n        }\r\n        return posts\r\n    }, [sort, posts])\r\n\r\n    return sortedPosts;\r\n}\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort);\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query))\r\n    }, [query, sortedPosts])\r\n\r\n    return sortedAndSearchedPosts;\r\n}","export const getPageCount = (totalCount, limit) => {\r\n    return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n    let result = [];\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1)\r\n    }\r\n    return result;\r\n}","import { Button } from '@mui/material';\r\nimport React from 'react'\r\nimport classes from \"./Mybutton.module.css\";\r\n\r\nexport default function Mybutton({children, ...props}) {\r\n    return (\r\n        <Button {...props} variant=\"contained\">\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport classes from './myInput.module.css';\r\n\r\nconst myInput = React.forwardRef((props, ref) => {\r\n    return (\r\n        <TextField sx={{ mt: 1, mb: 1 }} className={ classes.myInput } label=\"\" variant=\"filled\" ref = { ref } {...props}/>\r\n    );\r\n});\r\n\r\nexport default myInput;\r\n\r\n","import React, {useState} from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport Mybutton from \"./UI/button/Mybutton\";\r\nimport MyInput from \"./UI/input/myInput\";\r\n\r\nfunction PostForm({create}) {\r\n    const [post, setPost] = useState({title: '', body: ''})\r\n\r\n    const addNewPost = (e) => {\r\n        e.preventDefault()\r\n        const newPost = {\r\n            ...post, id: Date.now()\r\n        }\r\n        create(newPost)\r\n        setPost({title: '', body: ''})\r\n    }\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <form>\r\n            <MyInput\r\n                onChange = {e => setPost({...post, title: e.target.value})}\r\n                value = {post.title}\r\n                type = \"text\" \r\n                placeholder={ t(\"name_of_post\") }/>\r\n            <MyInput\r\n                onChange = {e => setPost({...post, body: e.target.value})}\r\n                value = {post.body}\r\n                type=\"text\"\r\n                placeholder={ t(\"descr_of_post\") }/>\r\n            <Mybutton onClick={addNewPost} >{ t(\"create_post\") }</Mybutton>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material'\r\nimport React from 'react'\r\nimport classes from './mySelect.module.css';\r\n\r\nfunction MySelect({options, defaultValue, value, onChange}) {\r\n    return (\r\n        <FormControl sx={{ mt: 1 }}>\r\n            <InputLabel id=\"demo-simple-select-label\">{defaultValue}</InputLabel>\r\n            <Select \r\n                sx={{ minWidth: '200px' }}\r\n                value={value}\r\n                label={defaultValue}\r\n                onChange={event => onChange(event.target.value)}\r\n            >\r\n                {options.map(option => \r\n                    <MenuItem key={option.value} value= {option.value}>\r\n                        {option.name}\r\n                    </MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default MySelect\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport MyInput from './UI/input/myInput';\r\nimport MySelect from './UI/select/MySelect';\r\n\r\nfunction PostFilter({filter, setFilter}) {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                onChange={e => setFilter({...filter, query: e.target.value})}\r\n                value={filter.query}\r\n                type=\"text\"\r\n                placeholder={ t(\"search\") }/>\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                options={[\r\n                    {value: 'title', name: 'By name'}, \r\n                    {value: 'body', name: 'By description'},\r\n                ]}\r\n                defaultValue={ t(\"sort_by\") }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostFilter\r\n","import React from 'react'\r\nimport Mybutton from \"./UI/button/Mybutton\";\r\nimport { Typography } from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function PostItem(props) {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <div className=\"post\">\r\n            <Typography className=\"post_content\">\r\n                <strong>{props.post.id}. {props.post.title}</strong>\r\n                <p className=\"descr\">{props.post.body}</p>\r\n                <Mybutton onClick = {() => props.remove(props.post)}>\r\n                    <DeleteIcon sx={{fontSize: 16}}/>\r\n                    { t(\"delete_post\") }\r\n                </Mybutton>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PostItem from './PostItem'\r\n\r\nexport default function PostList({posts, title, remove}) {\r\n    const { t } = useTranslation()\r\n    \r\n    if(!posts.length) {\r\n        return (\r\n            <Typography variant=\"h5\"  sx={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                { t(\"no_posts\") }\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\"  sx={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                {title}\r\n            </Typography>\r\n            {posts.map((post, index) =>\r\n                <PostItem remove = {remove} number = {index + 1} post={post} key={post.id}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useMemo, useEffect} from 'react';\r\nimport PostService from '../API/PostService';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport { usePosts } from '../hooks/usePosts';\r\nimport { getPageCount, getPagesArray } from '../utils/pages';\r\nimport PostForm from '../components/PostForm';\r\nimport PostFilter from '../components/PostFilter';\r\nimport PostList from '../components/PostList';\r\nimport Mybutton from '../components/UI/button/Mybutton';\r\nimport { Button, ButtonGroup } from '@mui/material';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Posts() {\r\n    const [posts,\r\n        setPosts] = useState([])\r\n    const [filter, setFilter] = useState({sort: '', query: ''});\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching( async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page);\r\n        setPosts(response.data)\r\n        const totalCount = response.headers['x-total-count']\r\n        setTotalPages(getPageCount(totalCount, limit));\r\n    })\r\n\r\n    let pagesArray = getPagesArray(totalPages)\r\n    console.log([pagesArray])\r\n\r\n    const changePage = (page) => {\r\n        setPage(page)\r\n        fetchPosts(limit, page)\r\n    }\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost])\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts(limit, page)\r\n    }, [])\r\n\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n\r\n    const { t } = useTranslation()\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{ t(\"home\") }</title>\r\n            </Helmet>\r\n            <PostForm create={createPost} />\r\n\r\n            <PostFilter filter={filter} setFilter={setFilter} />\r\n            {postError &&\r\n                <h1>Error happened ${postError}</h1>\r\n            }\r\n            {isPostsLoading\r\n                ? <h1>Loaddiiing</h1>\r\n                : <PostList remove={removePost} posts={sortedAndSearchedPosts} title={t('test_app')}/>\r\n            }\r\n            <ButtonGroup variant=\"text\" aria-label=\"outlined primary button group\" sx={{textAlign: 'center', justifyContent: 'center', width: '100%'}}>\r\n                {pagesArray.map(n => \r\n                    <Button\r\n                        onClick={() => changePage(n)}\r\n                        key={n}\r\n                    >{n}</Button>    \r\n                )}\r\n            </ButtonGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import { useState } from 'react';\r\n\r\nexport const useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetching = async (...args) => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback(...args)\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction Error() {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\" color=\"initial\">\r\n                { t(\"error_content\") }\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import {Link} from 'react-router-dom'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n\r\nfunction MyNavbar() {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              { t(\"test_app\") }\r\n            </Typography>\r\n            <MenuItem component=\"button\" color=\"inherit\" underline=\"hover\"><Link to=\"/about\" className=\"link-rs\">{ t(\"about\") }</Link></MenuItem>\r\n            <MenuItem component=\"button\" color=\"inherit\" underline=\"hover\"><Link to=\"/\" className=\"link-rs\">{ t(\"home\") }</Link></MenuItem>\r\n          </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default MyNavbar\r\n","import React from 'react';\nimport './styles/App.css';\nimport {\n    BrowserRouter,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\nimport About from './pages/About';\nimport Posts from './pages/Posts';\nimport Error from './pages/Error';\nimport MyNavbar from './components/UI/navbar/MyNavbar';\nimport { useTranslation } from 'react-i18next';\n\nfunction App() {\n    const { t } = useTranslation()\n    \n    return(\n        <BrowserRouter>\n            <MyNavbar/>\n                <Routes>\n                    <Route path=\"/about\" element={<About/>} />\n                    <Route path=\"/\" element={<Posts/>} />\n                    <Route path=\"*\" element={<Error/>} />\n                </Routes>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport i18n from \"i18next\";\nimport { initReactI18next } from 'react-i18next';\nimport HttpApi from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .use(HttpApi)\n  .init({\n    supportedLngs: ['en', 'ru'],\n    fallbackLng: 'en',\n    detection: {\n      order: ['cookie', 'htmlTag', 'localStorage', 'navigator', 'path', 'subdomain'],\n      caches: ['cookie'],\n    },\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/translation.json',\n    },\n    react: { \n      useSuspense: false\n    },\n  })\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}